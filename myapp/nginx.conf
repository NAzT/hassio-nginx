server {
	listen       $PORT;
	server_name  localhost;

	location / {
		root   /usr/share/nginx/html;
		index  index.html index.htm;
		try_files $uri /index.html;
	}

	 location /1880/ {
		proxy_pass http://localhost:1880/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header                X-Host $host;
		proxy_pass_request_headers      on;
		proxy_http_version 1.1;
		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Unmask IP of user
		# proxy_set_header Upgrade $http_upgrade;
		# proxy_set_header Connection $connection_upgrade;
  	}

	location /8111/ {
		proxy_pass http://localhost:8111;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header                X-Host $host;
		proxy_pass_request_headers      on;
		proxy_http_version 1.1;
		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Unmask IP of user
		# proxy_set_header Upgrade $http_upgrade;
		# proxy_set_header Connection $connection_upgrade;
  	}


	gzip on;
	gzip_vary on;
	gzip_min_length 10240;
	gzip_proxied expired no-cache no-store private auth;
	gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
}

# worker_processes  8;

# events {
#     worker_connections  1024;
#     use epoll;
# }


# http {
#     upstream backend {
#         server server-nodejs:8080 weight=50;
#         server cloud-run:8082 weight=50;
#         # server server-nodejs:8080
#         # server localhost:8081;
#         # server localhost:8082;
#     }

#     server {
#         listen       80  default_server;
#         server_name  _;
#         underscores_in_headers on;

#         location / {
#             proxy_pass http://backend;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }

#     }
# }
